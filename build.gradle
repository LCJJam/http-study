plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

sourceSets {
    integrationTest { // 통합 테스트 환경 정의
        java {
            srcDir 'src/integrationTest/java'
        }
        resources {
            srcDir 'src/integrationTest/resources'
        }
        compileClasspath += sourceSets.main.output + sourceSets.test.output
        runtimeClasspath += sourceSets.main.output + sourceSets.test.output
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}


repositories {
    mavenCentral()
}

dependencies {
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation(platform("org.springframework.cloud:spring-cloud-dependencies:2023.0.3"))
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.3'

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock'
    testImplementation 'org.mockito:mockito-core:5.4.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test' // Spring Boot 테스트 의존성
}

tasks.withType(JavaExec).configureEach {
    jvmArgs = ["-Xms512m", "-Xmx1024m"]
}

//tasks.withType(JavaCompile).configureEach {
//    options.compilerArgs << "-parameters"
//}

tasks.withType(Test).configureEach {
    jvmArgs += [
            "-XX:+EnableDynamicAgentLoading", // 동적 에이전트 로드 허용
            "-Djdk.instrument.traceUsage=true" // 에이전트 로드 관련 정보 출력
    ]
}

tasks.register('integrationTest', Test) {
    description = "Runs the integration tests."
    group = "verification"
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter test
}

check.dependsOn integrationTest
